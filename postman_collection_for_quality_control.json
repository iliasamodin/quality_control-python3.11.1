{
	"info": {
		"_postman_id": "12a84a59-ed30-49e3-9ead-6105a4988a1b",
		"name": "Quality control",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29305594"
	},
	"item": [
		{
			"name": "First user (CRUD for concentrate)",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonObject = JSON.parse(responseBody);",
									"pm.globals.set(\"token\", jsonObject.token);",
									"",
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Token is not empty\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.token).to.exist.and.to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Token should be a string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.token).to.be.a('string');",
									"});",
									"",
									"",
									"pm.test(\"Token length must be greater than zero\", function () {",
									"  const responseData = pm.response.json();",
									"",
									"  pm.expect(responseData.token).to.exist.and.to.have.lengthOf.at.least(1, \"Token should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Token is alphanumeric\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.token).to.match(/^[a-zA-Z0-9]+$/, \"Token should be alphanumeric\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"first_user\",\n    \"password\": \"4sTzlxRPb6sJ\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/login/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"login",
								""
							]
						}
					},
					"response": [
						{
							"name": "Received token",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"first_user\",\n    \"password\": \"4sTzlxRPb6sJ\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/v1/login/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"login",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 29 Sep 2023 16:07:42 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.11.1"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Allow",
									"value": "POST, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "52"
								},
								{
									"key": "Vary",
									"value": "Cookie"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"token\": \"f61571cf920e4258a84db38e58fb32c26e40a3e2\"\n}"
						}
					]
				},
				{
					"name": "Missing record of concentrate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Viewing a missing record of concentrate\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(",
									"        \"The report for the specified date has not yet been completed for the concentrate with this name. To fill out the report, send the percentage of 'iron', 'silicon', 'aluminum', 'calcium' and 'sulfur' content in a post request to the current page.\"",
									"    );",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/concentrates/2023/4/first-concentrate/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"concentrates",
								"2023",
								"4",
								"first-concentrate",
								""
							]
						}
					},
					"response": [
						{
							"name": "Response for viewing a non-existent concentrate",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Token {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/v1/concentrates/2023/4/first-concentrate/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"concentrates",
										"2023",
										"4",
										"first-concentrate",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 29 Sep 2023 16:37:43 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.11.1"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "258"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The report for the specified date has not yet been completed for the concentrate with this name. To fill out the report, send the percentage of 'iron', 'silicon', 'aluminum', 'calcium' and 'sulfur' content in a post request to the current page.\"\n}"
						}
					]
				},
				{
					"name": "Set record of concentrate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Adding a new record of concentrate\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.eql({",
									"        \"name\": \"First concentrate\",",
									"        \"year\": 2023,",
									"        \"month\": 4,",
									"        \"iron\": \"90.0000\",",
									"        \"silicon\": \"7.0000\",",
									"        \"aluminum\": \"0.5000\",",
									"        \"calcium\": \"0.5000\",",
									"        \"sulfur\": \"0.2000\"",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"iron\": 90,\n    \"silicon\": 7,\n    \"aluminum\": 0.5,\n    \"calcium\": 0.5,\n    \"sulfur\": 0.2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/concentrates/2023/4/first-concentrate/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"concentrates",
								"2023",
								"4",
								"first-concentrate",
								""
							]
						}
					},
					"response": [
						{
							"name": "Added concentrate report",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Token {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"iron\": 90,\n    \"silicon\": 7,\n    \"aluminum\": 0.5,\n    \"calcium\": 0.5,\n    \"sulfur\": 0.2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/v1/concentrates/2023/4/first-concentrate/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"concentrates",
										"2023",
										"4",
										"first-concentrate",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 29 Sep 2023 16:53:11 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.11.1"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "143"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"First concentrate\",\n    \"year\": 2023,\n    \"month\": 4,\n    \"iron\": \"90.0000\",\n    \"silicon\": \"7.0000\",\n    \"aluminum\": \"0.5000\",\n    \"calcium\": \"0.5000\",\n    \"sulfur\": \"0.2000\"\n}"
						}
					]
				},
				{
					"name": "Update records of concentrates by table",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Verify that the response is an array\", function () {",
									"  pm.expect(pm.response.json()).to.be.an('array');",
									"});",
									"",
									"",
									"pm.test(\"Verify that the name is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array');",
									"    responseData.forEach(function(data){",
									"        pm.expect(data.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "report_on_concentrates.xlsx"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/concentrates/update-by-table/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"concentrates",
								"update-by-table",
								""
							]
						}
					},
					"response": [
						{
							"name": "Reports updated by table",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Token {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "report_on_concentrates.xlsx"
										}
									]
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/v1/concentrates/update-by-table/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"concentrates",
										"update-by-table",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 29 Sep 2023 17:36:12 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.11.1"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "434"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"name\": \"First concentrate\",\n        \"year\": 2023,\n        \"month\": 4,\n        \"iron\": \"91.0000\",\n        \"silicon\": \"7.5000\",\n        \"aluminum\": \"0.5000\",\n        \"calcium\": \"0.5000\",\n        \"sulfur\": \"0.1500\"\n    },\n    {\n        \"name\": \"Second concentrate\",\n        \"year\": 2023,\n        \"month\": 4,\n        \"iron\": \"93.0000\",\n        \"silicon\": \"6.0000\",\n        \"aluminum\": \"0.6000\",\n        \"calcium\": \"0.3000\",\n        \"sulfur\": \"0.1000\"\n    },\n    {\n        \"name\": \"Third concentrate\",\n        \"year\": 2023,\n        \"month\": 4,\n        \"iron\": \"92.0000\",\n        \"silicon\": \"4.5000\",\n        \"aluminum\": \"0.7000\",\n        \"calcium\": \"0.2000\",\n        \"sulfur\": \"0.0500\"\n    }\n]"
						}
					]
				},
				{
					"name": "Delete a concentrate record",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Checking the deletion of a record for concentrate\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"Concentrate report deleted\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/concentrates/2023/4/first-concentrate/delete/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"concentrates",
								"2023",
								"4",
								"first-concentrate",
								"delete",
								""
							]
						}
					},
					"response": [
						{
							"name": "Successful deletion message",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Token {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/v1/concentrates/2023/4/first-concentrate/delete/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"concentrates",
										"2023",
										"4",
										"first-concentrate",
										"delete",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 29 Sep 2023 18:04:22 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.11.1"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "40"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Concentrate report deleted\"\n}"
						}
					]
				},
				{
					"name": "Monthly report on concentrates",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Viewing monthly report of concentrate\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.eql({",
									"        \"avg\": {",
									"            \"iron__avg\": 92.5,",
									"            \"silicon__avg\": 5.25,",
									"            \"aluminum__avg\": 0.65,",
									"            \"calcium__avg\": 0.25,",
									"            \"sulfur__avg\": 0.075",
									"        },",
									"        \"min\": {",
									"            \"iron__min\": 92.0,",
									"            \"silicon__min\": 4.5,",
									"            \"aluminum__min\": 0.6,",
									"            \"calcium__min\": 0.2,",
									"            \"sulfur__min\": 0.05",
									"        },",
									"        \"max\": {",
									"            \"iron__max\": 93.0,",
									"            \"silicon__max\": 6.0,",
									"            \"aluminum__max\": 0.7,",
									"            \"calcium__max\": 0.3,",
									"            \"sulfur__max\": 0.1",
									"        }",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/concentrates/2023/4/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"concentrates",
								"2023",
								"4",
								""
							]
						}
					},
					"response": [
						{
							"name": "Monthly report",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Token {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/v1/concentrates/2023/4/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"concentrates",
										"2023",
										"4",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 29 Sep 2023 18:07:12 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.11.1"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "310"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"avg\": {\n        \"iron__avg\": 92.5,\n        \"silicon__avg\": 5.25,\n        \"aluminum__avg\": 0.65,\n        \"calcium__avg\": 0.25,\n        \"sulfur__avg\": 0.075\n    },\n    \"min\": {\n        \"iron__min\": 92,\n        \"silicon__min\": 4.5,\n        \"aluminum__min\": 0.6,\n        \"calcium__min\": 0.2,\n        \"sulfur__min\": 0.05\n    },\n    \"max\": {\n        \"iron__max\": 93,\n        \"silicon__max\": 6,\n        \"aluminum__max\": 0.7,\n        \"calcium__max\": 0.3,\n        \"sulfur__max\": 0.1\n    }\n}"
						}
					]
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logging out of account\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(",
									"        \"You are logged out\"",
									"    );",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/logout/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"logout",
								""
							]
						}
					},
					"response": [
						{
							"name": "Successful logout",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Token {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/v1/logout/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"logout",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 29 Sep 2023 18:09:10 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.11.1"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "32"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"You are logged out\"\n}"
						}
					]
				}
			],
			"description": "Checking the functionality of viewing, adding, changing and deleting records for concentrates and viewing reports for concentrates for a user with CRUD access to the corresponding table."
		},
		{
			"name": "Second user",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonObject = JSON.parse(responseBody);",
									"pm.globals.set(\"token\", jsonObject.token);",
									"",
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required field - token\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.token).to.exist.and.to.be.a('string');",
									"});",
									"",
									"",
									"pm.test(\"Token is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.token).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Token should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Token is in a valid format\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.token).to.exist.and.to.be.a('string').and.to.match(/^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+$/);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"second_user\",\n    \"password\": \"4sTzlxRPb6sJ\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/login/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"login",
								""
							]
						}
					},
					"response": [
						{
							"name": "Received token",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"second_user\",\n    \"password\": \"4sTzlxRPb6sJ\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/v1/login/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"login",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 29 Sep 2023 18:13:48 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.11.1"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Allow",
									"value": "POST, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "52"
								},
								{
									"key": "Vary",
									"value": "Cookie"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"token\": \"03f4baf291af5461447b57f41ae73829158ed378\"\n}"
						}
					]
				},
				{
					"name": "Record of concentrate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Viewing a record of concentrate\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.eql({",
									"        \"name\": \"Second concentrate\",",
									"        \"year\": 2023,",
									"        \"month\": 4,",
									"        \"iron\": \"93.0000\",",
									"        \"silicon\": \"6.0000\",",
									"        \"aluminum\": \"0.6000\",",
									"        \"calcium\": \"0.3000\",",
									"        \"sulfur\": \"0.1000\"",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/concentrates/2023/4/second-concentrate/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"concentrates",
								"2023",
								"4",
								"second-concentrate",
								""
							]
						}
					},
					"response": [
						{
							"name": "Response for viewing record of concentrate",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Token {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/v1/concentrates/2023/4/second-concentrate/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"concentrates",
										"2023",
										"4",
										"second-concentrate",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 29 Sep 2023 18:15:41 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.11.1"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "144"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"Second concentrate\",\n    \"year\": 2023,\n    \"month\": 4,\n    \"iron\": \"93.0000\",\n    \"silicon\": \"6.0000\",\n    \"aluminum\": \"0.6000\",\n    \"calcium\": \"0.3000\",\n    \"sulfur\": \"0.1000\"\n}"
						}
					]
				},
				{
					"name": "Set record of concentrate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Adding a new record of concentrate\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(",
									"        \"You cannot add or change information about concentrates\"",
									"    );",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"iron\": 90,\n    \"silicon\": 7,\n    \"aluminum\": 0.5,\n    \"calcium\": 0.5,\n    \"sulfur\": 0.2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/concentrates/2023/4/second-concentrate/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"concentrates",
								"2023",
								"4",
								"second-concentrate",
								""
							]
						}
					},
					"response": [
						{
							"name": "Denying a user with insufficient rights",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Token {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"iron\": 90,\n    \"silicon\": 7,\n    \"aluminum\": 0.5,\n    \"calcium\": 0.5,\n    \"sulfur\": 0.2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/v1/concentrates/2023/4/first-concentrate/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"concentrates",
										"2023",
										"4",
										"first-concentrate",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 29 Sep 2023 18:17:20 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.11.1"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "69"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"You cannot add or change information about concentrates\"\n}"
						}
					]
				},
				{
					"name": "Monthly report on concentrates",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Viewing monthly report of concentrate\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.eql({",
									"        \"avg\": {",
									"            \"iron__avg\": 92.5,",
									"            \"silicon__avg\": 5.25,",
									"            \"aluminum__avg\": 0.65,",
									"            \"calcium__avg\": 0.25,",
									"            \"sulfur__avg\": 0.075",
									"        },",
									"        \"min\": {",
									"            \"iron__min\": 92.0,",
									"            \"silicon__min\": 4.5,",
									"            \"aluminum__min\": 0.6,",
									"            \"calcium__min\": 0.2,",
									"            \"sulfur__min\": 0.05",
									"        },",
									"        \"max\": {",
									"            \"iron__max\": 93.0,",
									"            \"silicon__max\": 6.0,",
									"            \"aluminum__max\": 0.7,",
									"            \"calcium__max\": 0.3,",
									"            \"sulfur__max\": 0.1",
									"        }",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/concentrates/2023/4/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"concentrates",
								"2023",
								"4",
								""
							]
						}
					},
					"response": [
						{
							"name": "Monthly report",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Token {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/v1/concentrates/2023/4/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"concentrates",
										"2023",
										"4",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 29 Sep 2023 18:07:12 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.11.1"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "310"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"avg\": {\n        \"iron__avg\": 92.5,\n        \"silicon__avg\": 5.25,\n        \"aluminum__avg\": 0.65,\n        \"calcium__avg\": 0.25,\n        \"sulfur__avg\": 0.075\n    },\n    \"min\": {\n        \"iron__min\": 92,\n        \"silicon__min\": 4.5,\n        \"aluminum__min\": 0.6,\n        \"calcium__min\": 0.2,\n        \"sulfur__min\": 0.05\n    },\n    \"max\": {\n        \"iron__max\": 93,\n        \"silicon__max\": 6,\n        \"aluminum__max\": 0.7,\n        \"calcium__max\": 0.3,\n        \"sulfur__max\": 0.1\n    }\n}"
						}
					]
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logging out of account\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(",
									"        \"You are logged out\"",
									"    );",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/logout/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"logout",
								""
							]
						}
					},
					"response": [
						{
							"name": "Successful logout",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Token {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/v1/logout/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"logout",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 29 Sep 2023 18:09:10 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.11.1"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "32"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"You are logged out\"\n}"
						}
					]
				}
			],
			"description": "Checking the functionality of viewing a record about a concentrate and the lack of access to change this record for a user who can only view records and reports on concentrates, but not add, change or delete them."
		}
	]
}